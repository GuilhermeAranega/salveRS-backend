// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

enum Tipo {
  empresa
  pessoa_fisica
}

enum Status {
  recebido
  consertando
  pronto
}

model Usuarios {
  id        String @id @default(cuid())
  nome      String @db.VarChar(255)
  documento String @unique @db.VarChar(14)
  telefone  String @unique @db.VarChar(11)
  email     String @unique @db.VarChar(255)
  idade     Int
  senha     String @db.VarChar(255)

  cep         String @db.VarChar(8)
  rua         String @db.VarChar(255)
  numero      Int
  complemento String @db.VarChar(255)
  bairro      String @db.VarChar(255)
  cidade      String @db.VarChar(255)

  tipo     Tipo        @default(pessoa_fisica)
  conserto Consertos[]
  Itens    Itens[]

  @@map(name: "usuarios")
}

model Prestadores {
  id        String @id @default(cuid())
  nome      String @db.VarChar(255)
  documento String @unique @db.VarChar(255)
  telefone  String @unique @db.VarChar(11)
  email     String @unique @db.VarChar(255)
  idade     Int
  senha     String @db.VarChar(255)

  cep         String @db.VarChar(8)
  rua         String @db.VarChar(255)
  numero      Int
  complemento String @db.VarChar(255)
  bairro      String @db.VarChar(255)
  cidade      String @db.VarChar(255)

  tipo     Tipo        @default(pessoa_fisica)
  conserto Consertos[]

  @@map(name: "prestadores")
}

model Consertos {
  id String @id @default(cuid())

  prestador   Prestadores? @relation(fields: [prestadorId], references: [id])
  prestadorId String?

  usuario   Usuarios @relation(fields: [usuarioId], references: [id])
  usuarioId String

  itens Itens[]

  data       DateTime @default(now())
  observacao String?
  status     Status   @default(recebido)

  @@map(name: "consertos")
}

model Itens {
  id         String @id @default(cuid())
  descricao  String
  quantidade Int

  conserto    Consertos? @relation(fields: [consertosId], references: [id])
  consertosId String?

  usuario    Usuarios @relation(fields: [usuariosId], references: [id])
  usuariosId String

  @@map(name: "itens")
}

model Links {
  id     String @id @default(cuid())
  userId String @unique @map("user_id")

  token String @unique

  createdAt DateTime @default(now()) @map("created_at")

  @@map(name: "links")
}
